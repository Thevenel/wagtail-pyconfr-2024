# Generated by Django 5.0.9 on 2024-11-01 19:04

import django.db.models.deletion
import django.utils.timezone
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('wagtailcore', '0094_alter_page_locale'),
        ('wagtailimages', '0026_delete_uploadedimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='JobListing',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='JobTagIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='JobPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Published Date')),
                ('location', models.CharField(max_length=100)),
                ('short_description', models.CharField(help_text='Max 200 characters', max_length=200)),
                ('salary', models.IntegerField(verbose_name='A salary approximation')),
                ('company', models.CharField(max_length=200)),
                ('content', wagtail.fields.StreamField([('heading', 0), ('paragraph', 1), ('blockquote', 2), ('list', 4), ('html', 5), ('image', 6)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'form_classname': 'full title', 'template': 'blocks/heading.html'}), 1: ('wagtail.blocks.RichTextBlock', (), {'template': 'blocks/paragraph.html'}), 2: ('wagtail.blocks.BlockQuoteBlock', (), {'template': 'blocks/blockquote.html'}), 3: ('wagtail.blocks.CharBlock', (), {}), 4: ('wagtail.blocks.ListBlock', (3,), {'template': 'blocks/list.html'}), 5: ('wagtail.blocks.RawHTMLBlock', (), {'template': 'blocks/html.html'}), 6: ('wagtail.images.blocks.ImageChooserBlock', (), {})}, null=True)),
                ('thumbnail', models.ForeignKey(blank=True, help_text='Choose a image for your cover', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='JobPageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='job.jobpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='jobpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='job.JobPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
